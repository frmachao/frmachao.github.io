<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>一个博客</title>
    <link href="/2021/03/%E4%B8%80%E4%B8%AA%E5%8D%9A%E5%AE%A2/"/>
    <url>/2021/03/%E4%B8%80%E4%B8%AA%E5%8D%9A%E5%AE%A2/</url>
    
    <content type="html"><![CDATA[<h2 id="重新开始搞博客"><a href="#重新开始搞博客" class="headerlink" title="重新开始搞博客"></a>重新开始搞博客</h2><blockquote><p>为什么选 <code>hexo</code> ?</p></blockquote><p>一开始只想有个属于自己的地方写文字记录,静态博客、使用<code>markdown</code>编写就是我的首选了，尤其是 <code>markdown</code> 自由的插入图片、视频，结合免费的图床和云存储服务，就可以把这些媒体文件从文字中分离出来，以后有了自己的动态网站迁移文章也方便。其次是自己以前搭建过 hexo + github pages 的博客, 还有一点很重要：<code>这些东西完全免费</code>，如果你不使用自定义域名的话，连域名的钱的省了。</p><p>所以，本站点唯一的开销就是 ‘frmachao.top’ 这个域名了，一口气买了 10 年。</p><blockquote><p>评论怎么迁移呢?</p></blockquote><p>这个还没想好，因为现在的评论功能是使用 <code>Gitalk</code> 实现的，后面导出评论数据可能需要自己写个脚本才能批量导出。</p><p>其实不止评论，因为静态博客的原因，很多东西都要借助第三方的插件来实现,比如</p><ul><li>文章阅读量</li><li>网页访问量</li><li>邮件订阅</li><li>在线聊天</li></ul><h2 id="评论插件"><a href="#评论插件" class="headerlink" title="评论插件"></a>评论插件</h2><h3 id="使用gitalk评论插件"><a href="#使用gitalk评论插件" class="headerlink" title="使用gitalk评论插件"></a>使用<code>gitalk</code>评论插件</h3><p>遇到问题：gitalk 官方代码采用了第三方提供的 cors proxy 服务，此服务已于 2021 年 1 月 31 日终止</p><p>解决：gitalking 切换到自建的 CORS proxy 参考：</p><ol><li><a href="https://github.com/Zibri/cloudflare-cors-anywhere">https://github.com/Zibri/cloudflare-cors-anywhere</a> 一个代理库</li><li><a href="https://github.com/gitalk/gitalk/issues/429">https://github.com/gitalk/gitalk/issues/429</a> 大家对这个问题的讨论</li></ol><blockquote><p>2021.03.03 Gitalk 作者发布了更新</p></blockquote><p><code>Gitalk</code> 更新版本到 1.7.2 或者修改配置增加 proxy: ‘<a href="https://cors-anywhere.azm.workers.dev/https://github.com/login/oauth/access_token&#39;">https://cors-anywhere.azm.workers.dev/https://github.com/login/oauth/access_token&#39;</a></p><p>后面尝试自己搭建代 cors proxy 服务</p><h3 id="Gitalk-原理"><a href="#Gitalk-原理" class="headerlink" title="Gitalk 原理"></a>Gitalk 原理</h3><p>在静态博客中使用评论功能，文章的唯一标示就是页面的<code>location.href</code> 即 url ,gitalk 将 这个唯一标识 作为 issue 的 label 与文章关联，每篇文章对应一个 Issue</p><p><code>fluid主题</code> 里集成 Gitalk 插件时多处理了一步 在 <code>gitalk.ejs</code> 里做了 md5 加密，加密后的值就是 issue 的 lable</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">var</span> gitalk = <span class="hljs-keyword">new</span> Gitalk(&#123;<br>  clientID: <span class="hljs-string">&#x27;&lt;%= theme.gitalk.clientID %&gt;&#x27;</span>,<br>  clientSecret: <span class="hljs-string">&#x27;&lt;%= theme.gitalk.clientSecret %&gt;&#x27;</span>,<br>  repo: <span class="hljs-string">&#x27;&lt;%= theme.gitalk.repo %&gt;&#x27;</span>,<br>  owner: <span class="hljs-string">&#x27;&lt;%= theme.gitalk.owner %&gt;&#x27;</span>,<br>  admin: &lt;%- <span class="hljs-built_in">JSON</span>.stringify(theme.gitalk.admin || []) %&gt;,<br>  id: <span class="hljs-string">&#x27;&lt;%= md5(page.path) %&gt;&#x27;</span>, <span class="hljs-comment">// 这里做了md5 加密</span><br>  language: <span class="hljs-string">&#x27;&lt;%= theme.gitalk.language %&gt;&#x27;</span>,<br>  labels: &lt;%- <span class="hljs-built_in">JSON</span>.stringify(theme.gitalk.labels || []) %&gt;,<br>  perPage: &lt;%= theme.gitalk.perPage %&gt;,<br>  pagerDirection: <span class="hljs-string">&#x27;&lt;%= theme.gitalk.pagerDirection %&gt;&#x27;</span>,<br>  createIssueManually: &lt;%= theme.gitalk.createIssueManually %&gt;,<br>  distractionFreeMode: &lt;%= theme.gitalk.distractionFreeMode %&gt;,<br>  proxy: <span class="hljs-string">&#x27;&lt;%= theme.gitalk.proxy %&gt;&#x27;</span><br>&#125;);<br></code></pre></td></tr></table></figure><p><code>page.path</code> :page 是 hexo 中提供的变量，page.path 是页面网址（不含根路径）<br>比如 <code>https://frmachao.top/2021/03/一个博客/</code>这个页面取 page.path 的值就是 <code>2021/03/一个博客/</code>，加密后的 32 位 MD5：<code>7c1b02acefaf2d82e0f553cb54de19d8</code><br><img src="https://gitee.com/mccode/images/raw/master/uPic/Q5u4nh6MHHtV.png" alt="Q5u4nh6MHHtV"><br><code>https://frmachao.top/links/</code> —&gt; links/index.html 非文章页面会返回这样的格式,加密后的 32 位 MD5：<code>38687fdbcd50268b872dd8c493f739e6</code><br><img src="https://gitee.com/mccode/images/raw/master/uPic/wYtVZti7RfqJ.png" alt="wYtVZti7RfqJ"></p><p><code>注意⚠️</code>: page.path 取到的 url 路径是 url 解码过的</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">2021/03/%E4%B8%80%E4%B8%AA%E5%8D%9A%E5%AE%A2/ <span class="hljs-comment"># url编码</span><br>2021/03/一个博客/  <span class="hljs-comment"># url解码</span><br></code></pre></td></tr></table></figure><h2 id="图床"><a href="#图床" class="headerlink" title="图床"></a>图床</h2><blockquote><p>目前是白嫖的 gitee 仓库</p></blockquote><p>使用 <code>github</code>仓库做图床不稳定(githubusercontent 在国内经常被墙),暂时用码云的仓库做图床</p><ul><li><a href="http://ping.chinaz.com/raw.githubusercontent.com">ping 检测 raw.githubusercontent.com 在国内的状态</a></li></ul><h2 id="网站统计插件"><a href="#网站统计插件" class="headerlink" title="网站统计插件"></a>网站统计插件</h2><ul><li>使用 <code>leancloud</code> 的服务 统计网页访问数 与 文章阅读数</li><li>百度统计</li></ul><h2 id="自定义域名与-SSL-证书"><a href="#自定义域名与-SSL-证书" class="headerlink" title="自定义域名与 SSL 证书"></a>自定义域名与 SSL 证书</h2><p>当前基于 hexo 的静态博客 <a href="http://frmachao.top/">frmachao’blog</a> 托管在 <code>github pages</code> 服务上。</p><p>域名在购买于阿里云并备案，主要为了使用阿里云免费的<code>SSL</code>证书才备案的域名，结果晚上看了一篇博客 才知道： Github Pages 支持绑定自定义的域名，启用域名绑定后无需用户自行配置。（博客链接忘记了，后面找到后补上）</p><h2 id="博客主题"><a href="#博客主题" class="headerlink" title="博客主题"></a>博客主题</h2><p>主题使用了 <a href="https://github.com/fluid-dev/hexo-theme-fluid">fluid</a></p><p>自己做的修改：</p><ul><li>Post.ejs 中添加 AddToAny 插件来支持文章分享</li><li>Post.ejs 中修改 Custom 的位置到文章底部</li></ul><h2 id="测试插入视频"><a href="#测试插入视频" class="headerlink" title="测试插入视频"></a>测试插入视频</h2><blockquote><p><code>javascript</code> 的诞生与死亡</p></blockquote><iframewidth="100%"height="480px"src="//player.bilibili.com/player.html?aid=1623152&bvid=BV1Gx411P7GJ&cid=2467718&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"></iframe><blockquote><p>Do not just seek happiness for yourself. Seek happiness for all. Through kindness. Through mercy.</p><footer><strong>David Levithan</strong><cite>Wide Awake</cite></footer></blockquote><h2 id="hexo-常用命令"><a href="#hexo-常用命令" class="headerlink" title="hexo 常用命令"></a>hexo 常用命令</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo n <span class="hljs-string">&quot;我的博客&quot;</span> == hexo new <span class="hljs-string">&quot;我的博客&quot;</span> <span class="hljs-comment">#新建文章</span><br>hexo p == hexo publish<br>hexo g == hexo generate<span class="hljs-comment">#生成</span><br>hexo s == hexo server <span class="hljs-comment">#启动服务预览</span><br>hexo d == hexo deploy<span class="hljs-comment">#部署</span><br>hexo server <span class="hljs-comment">#Hexo 会监视文件变动并自动更新，您无须重启服务器。</span><br>hexo server -s <span class="hljs-comment">#静态模式</span><br>hexo server -p 5000 <span class="hljs-comment">#更改端口</span><br>hexo server -i 192.168.1.1 <span class="hljs-comment">#自定义 IP</span><br>hexo clean <span class="hljs-comment">#清除缓存 网页正常情况下可以忽略此条命令</span><br>hexo g <span class="hljs-comment">#生成静态网页</span><br>hexo d <span class="hljs-comment">#开始部署</span><br><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>hexo</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
